{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\otame\\\\Downloads\\\\ccoss\\\\kanye-app\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Content from '../components/Content';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport Quote from '../components/Quote';\nimport { getQuote } from '../lib/quotes-api';\nconst HELP_TEXT = {\n  fetch: 'With an external fetch',\n  'api-routes': 'With API routes'\n};\n\nconst Index = ({\n  quotes\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, __jsx(Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"\\\"Kanye Quotes\\\"\"), quotes.map(({\n  id,\n  quote\n}) => __jsx(Card, {\n  key: id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, __jsx(Quote, {\n  text: quote,\n  helpText: HELP_TEXT[id],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})))));\n\nIndex.getInitialProps = async ({\n  req\n}) => {\n  const getHost = path => {\n    if (!req) return path;\n    return req.headers.host + path;\n  };\n\n  const quotes = [_objectSpread({}, (await getQuote('https://api.kanye.rest')), {\n    id: 'fetch'\n  }), _objectSpread({}, (await getQuote(getHost('api/quote'))), {\n    id: 'api-routes'\n  })];\n  return {\n    quotes\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\otame\\Downloads\\ccoss\\kanye-app\\pages\\index.js"],"names":["Layout","Content","Header","Card","Quote","getQuote","HELP_TEXT","fetch","Index","quotes","map","id","quote","getInitialProps","req","getHost","path","headers","host"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAAQC,QAAR,QAAuB,mBAAvB;AAEA,MAAMC,SAAS,GAAG;AACjBC,EAAAA,KAAK,EAAE,wBADU;AAEjB,gBAAc;AAFG,CAAlB;;AAKA,MAAMC,KAAK,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KACX,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEEA,MAAM,CAACC,GAAP,CAAW,CAAC;AAACC,EAAAA,EAAD;AAAIC,EAAAA;AAAJ,CAAD,KACZ,MAAC,IAAD;AAAM,EAAA,GAAG,EAAED,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,MAAC,KAAD;AAAO,EAAA,IAAI,EAAEC,KAAb;AAAoB,EAAA,QAAQ,EAAEN,SAAS,CAACK,EAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADC,CAFF,CADD,CADD;;AAaAH,KAAK,CAACK,eAAN,GAAuB,OAAM;AAACC,EAAAA;AAAD,CAAN,KAAc;AACpC,QAAMC,OAAO,GAACC,IAAI,IAAE;AAClB,QAAI,CAACF,GAAL,EAAU,OAAOE,IAAP;AACV,WAAOF,GAAG,CAACG,OAAJ,CAAYC,IAAZ,GAAiBF,IAAxB;AACD,GAHD;;AAIA,QAAMP,MAAM,GAAG,oBACT,MAAMJ,QAAQ,CAAC,wBAAD,CADL;AACiCM,IAAAA,EAAE,EAAC;AADpC,yBAET,MAAMN,QAAQ,CAACU,OAAO,CAAC,WAAD,CAAR,CAFL;AAE6BJ,IAAAA,EAAE,EAAC;AAFhC,KAAf;AAKA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACA,CAXD;;AAaA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport Content from '../components/Content';\r\nimport Header from '../components/Header';\r\nimport Card from '../components/Card'\r\nimport Quote from '../components/Quote'\r\n\r\nimport {getQuote} from '../lib/quotes-api'\r\n\r\nconst HELP_TEXT = {\r\n\tfetch: 'With an external fetch',\r\n\t'api-routes': 'With API routes'\r\n}\r\n\r\nconst Index=({quotes})=>(\r\n\t<Layout>\r\n\t\t<Content>\r\n\t\t\t<Header>\"Kanye Quotes\"</Header>\r\n\t\t\t{quotes.map(({id,quote})=>(\r\n\t\t\t<Card key={id}>\r\n\t\t\t\t<Quote text={quote} helpText={HELP_TEXT[id]}></Quote>\r\n\t\t\t</Card>\r\n\t\t\t))}\r\n\t\t</Content>\r\n\t</Layout>\r\n)\r\n\r\nIndex.getInitialProps =async({req})=>{\r\n\tconst getHost=path=>{\r\n\t\t\tif (!req) return path\r\n\t\t\treturn req.headers.host+path;\r\n\t}\r\n\tconst quotes = [\r\n\t\t{...(await getQuote('https://api.kanye.rest')),id:'fetch'},\r\n\t\t{...(await getQuote(getHost('api/quote'))),id:'api-routes'}\r\n\t];\r\n\r\n\treturn { quotes }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}